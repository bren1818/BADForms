<?php
/*  Class Generated by Brendon Irwin's Class Generator

	owner, v
	title, v
	description, v
	encrypt_all, i
	created, dt
	enabled, i
	sunrise, dt
	sunset, dt

*/

	class Theform{
		private $id;
		private $connection;
		private $errors;
		private $errorCount;
		private $owner;
		private $title;
		private $description;
		private $encrypt_all;
		private $created;
		private $enabled;
		private $sunrise;
		private $sunset;


		/*Constructor*/
		function __construct($databaseConnection=null){
			$this->connection = $databaseConnection;
		}

		/*Getters and Setters*/
		function getId(){
			return $this->id;
		}

		function setId($id){
			$this->id = $id;
		}

		function getConnection(){
			return $this->connection;
		}

		function setConnection($connection){
			$this->connection = $connection;
		}

		function getErrors(){
			return $this->errors;
		}

		function setErrors($errors){
			$this->errors = $errors;
		}

		function getErrorCount(){
			return $this->errorCount;
		}

		function setErrorCount($errorCount){
			$this->errorCount = $errorCount;
		}

		function getOwner(){
			return $this->owner;
		}

		function setOwner($owner){
			$this->owner = $owner;
		}

		function getTitle(){
			return $this->title;
		}

		function setTitle($title){
			$this->title = $title;
		}

		function getDescription(){
			return $this->description;
		}

		function setDescription($description){
			$this->description = $description;
		}

		function getEncrypt_all(){
			return $this->encrypt_all;
		}

		function setEncrypt_all($encrypt_all){
			$this->encrypt_all = $encrypt_all;
		}

		function getCreated(){
			return $this->created;
		}

		function setCreated($created){
			$this->created = $created;
		}

		function getEnabled(){
			return $this->enabled;
		}

		function setEnabled($enabled){
			$this->enabled = $enabled;
		}

		function getSunrise(){
			return $this->sunrise;
		}

		function setSunrise($sunrise){
			$this->sunrise = $sunrise;
		}

		function getSunset(){
			return $this->sunset;
		}

		function setSunset($sunset){
			$this->sunset = $sunset;
		}

		/*Special Functions*/
		function load($id = null){
			if( $this->connection ){
				if( $id == null && $this->getId() != ""){
					$id = $this->getId();
				}

				/*Perform Query*/
				if( $id != "" ){
					$query = $this->connection->prepare("SELECT * FROM `theform` WHERE `id` = :id");
					$query->bindParam(':id', $id);
					if( $query->execute() ){
						$theform = $query->fetchObject("theform");
					}
					if( is_object( $theform ) ){
						$theform->setConnection( $this->connection );
					}
					return $theform;
				}
			}
		}

		function getFromPost(){
			$this->setOwner( (isset($_POST["owner"])) ? $_POST["owner"] : $this->getOwner() );
			$this->setTitle( (isset($_POST["title"])) ? $_POST["title"] : $this->getTitle() );
			$this->setDescription( (isset($_POST["description"])) ? $_POST["description"] : $this->getDescription() );
			$this->setEncrypt_all( (isset($_POST["encrypt_all"])) ? $_POST["encrypt_all"] : $this->getEncrypt_all() );
			$this->setCreated( (isset($_POST["created"])) ? $_POST["created"] : $this->getCreated() );
			$this->setEnabled( (isset($_POST["enabled"])) ? $_POST["enabled"] : $this->getEnabled() );
			$this->setSunrise( (isset($_POST["sunrise"])) ? $_POST["sunrise"] : $this->getSunrise() );
			$this->setSunset( (isset($_POST["sunset"])) ? $_POST["sunset"] : $this->getSunset() );
		}

		function getFromRequest(){
			$this->setOwner( (isset($_REQUEST["owner"])) ? $_REQUEST["owner"] : $this->getOwner() );
			$this->setTitle( (isset($_REQUEST["title"])) ? $_REQUEST["title"] : $this->getTitle() );
			$this->setDescription( (isset($_REQUEST["description"])) ? $_REQUEST["description"] : $this->getDescription() );
			$this->setEncrypt_all( (isset($_REQUEST["encrypt_all"])) ? $_REQUEST["encrypt_all"] : $this->getEncrypt_all() );
			$this->setCreated( (isset($_REQUEST["created"])) ? $_REQUEST["created"] : $this->getCreated() );
			$this->setEnabled( (isset($_REQUEST["enabled"])) ? $_REQUEST["enabled"] : $this->getEnabled() );
			$this->setSunrise( (isset($_REQUEST["sunrise"])) ? $_REQUEST["sunrise"] : $this->getSunrise() );
			$this->setSunset( (isset($_REQUEST["sunset"])) ? $_REQUEST["sunset"] : $this->getSunset() );
		}

		function save(){
			$id = $this->getId();
			$owner = $this->getOwner();
			$title = $this->getTitle();
			$description = $this->getDescription();
			$encrypt_all = $this->getEncrypt_all();
			$created = $this->getCreated();
			$enabled = $this->getEnabled();
			$sunrise = $this->getSunrise();
			$sunset = $this->getSunset();
			if( $this->connection ){
				if( $id != "" ){
					/*Perform Update Operation*/
					$query = $this->connection->prepare("UPDATE  `theform` SET `owner` = :owner ,`title` = :title ,`description` = :description ,`encrypt_all` = :encrypt_all ,`created` = :created ,`enabled` = :enabled ,`sunrise` = :sunrise ,`sunset` = :sunset WHERE `id` = :id");
					$query->bindParam('owner', $owner);
					$query->bindParam('title', $title);
					$query->bindParam('description', $description);
					$query->bindParam('encrypt_all', $encrypt_all);
					$query->bindParam('created', $created);
					$query->bindParam('enabled', $enabled);
					$query->bindParam('sunrise', $sunrise);
					$query->bindParam('sunset', $sunset);
					$query->bindParam('id', $id);
					if( $query->execute() ){
						return $id;
					}else{
						return -1;
					}

				}else{
					/*Perform Insert Operation*/
					$query = $this->connection->prepare("INSERT INTO `theform` (`id`,`owner`,`title`,`description`,`encrypt_all`,`created`,`enabled`,`sunrise`,`sunset`) VALUES (NULL,:owner,:title,:description,:encrypt_all,:created,:enabled,:sunrise,:sunset);");
					$query->bindParam(':owner', $owner);
					$query->bindParam(':title', $title);
					$query->bindParam(':description', $description);
					$query->bindParam(':encrypt_all', $encrypt_all);
					$query->bindParam(':created', $created);
					$query->bindParam(':enabled', $enabled);
					$query->bindParam(':sunrise', $sunrise);
					$query->bindParam(':sunset', $sunset);

					if( $query->execute() ){
						$this->setId( $this->connection->lastInsertId() );
						return $this->getId();
					}else{
						return -1;
					}	
				}
			}
		}


		function delete($id = null){
			if( $this->connection ){
				if( $id == null && $this->getId() != ""){
					$id = $this->getId();
				}

				/*Perform Query*/
				if( $id != "" ){
					$query = $this->connection->prepare("DELETE FROM `theform` WHERE `id` = :id");
					$query->bindParam(':id', $id);
					if( $query->execute() ){
						return 1;
					}else{
						return 0;
					}
				}
			}
		}

		function getById($id){
			if( $this->connection ){
				if( $id == null && $this->getId() != ""){
					$id = $this->getId();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `theform` WHERE `id` = :id LIMIT 1");
				$query->bindParam(':id', $id);
				$object = null;

				if( $query->execute() ){
					while( $result = $query->fetchObject("theform") ){
						$object = $result;
					}

				}
				if( is_object( $object ) ){
					return $object;
				}
			}
		}

		function getByOwner($owner){
			if( $this->connection ){
				if( $owner == null && $this->getOwner() != ""){
					$owner = $this->getOwner();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `theform` WHERE `owner` = :owner LIMIT 1");
				$query->bindParam(':owner', $owner);
				$object = null;

				if( $query->execute() ){
					while( $result = $query->fetchObject("theform") ){
						$object = $result;
					}

				}
				if( is_object( $object ) ){
					return $object;
				}
			}
		}

		function getByTitle($title){
			if( $this->connection ){
				if( $title == null && $this->getTitle() != ""){
					$title = $this->getTitle();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `theform` WHERE `title` = :title LIMIT 1");
				$query->bindParam(':title', $title);
				$object = null;

				if( $query->execute() ){
					while( $result = $query->fetchObject("theform") ){
						$object = $result;
					}

				}
				if( is_object( $object ) ){
					return $object;
				}
			}
		}

		function getByDescription($description){
			if( $this->connection ){
				if( $description == null && $this->getDescription() != ""){
					$description = $this->getDescription();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `theform` WHERE `description` = :description LIMIT 1");
				$query->bindParam(':description', $description);
				$object = null;

				if( $query->execute() ){
					while( $result = $query->fetchObject("theform") ){
						$object = $result;
					}

				}
				if( is_object( $object ) ){
					return $object;
				}
			}
		}

		function getByEncrypt_all($encrypt_all){
			if( $this->connection ){
				if( $encrypt_all == null && $this->getEncrypt_all() != ""){
					$encrypt_all = $this->getEncrypt_all();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `theform` WHERE `encrypt_all` = :encrypt_all LIMIT 1");
				$query->bindParam(':encrypt_all', $encrypt_all);
				$object = null;

				if( $query->execute() ){
					while( $result = $query->fetchObject("theform") ){
						$object = $result;
					}

				}
				if( is_object( $object ) ){
					return $object;
				}
			}
		}

		function getByCreated($created){
			if( $this->connection ){
				if( $created == null && $this->getCreated() != ""){
					$created = $this->getCreated();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `theform` WHERE `created` = :created LIMIT 1");
				$query->bindParam(':created', $created);
				$object = null;

				if( $query->execute() ){
					while( $result = $query->fetchObject("theform") ){
						$object = $result;
					}

				}
				if( is_object( $object ) ){
					return $object;
				}
			}
		}

		function getByEnabled($enabled){
			if( $this->connection ){
				if( $enabled == null && $this->getEnabled() != ""){
					$enabled = $this->getEnabled();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `theform` WHERE `enabled` = :enabled LIMIT 1");
				$query->bindParam(':enabled', $enabled);
				$object = null;

				if( $query->execute() ){
					while( $result = $query->fetchObject("theform") ){
						$object = $result;
					}

				}
				if( is_object( $object ) ){
					return $object;
				}
			}
		}

		function getBySunrise($sunrise){
			if( $this->connection ){
				if( $sunrise == null && $this->getSunrise() != ""){
					$sunrise = $this->getSunrise();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `theform` WHERE `sunrise` = :sunrise LIMIT 1");
				$query->bindParam(':sunrise', $sunrise);
				$object = null;

				if( $query->execute() ){
					while( $result = $query->fetchObject("theform") ){
						$object = $result;
					}

				}
				if( is_object( $object ) ){
					return $object;
				}
			}
		}

		function getBySunset($sunset){
			if( $this->connection ){
				if( $sunset == null && $this->getSunset() != ""){
					$sunset = $this->getSunset();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `theform` WHERE `sunset` = :sunset LIMIT 1");
				$query->bindParam(':sunset', $sunset);
				$object = null;

				if( $query->execute() ){
					while( $result = $query->fetchObject("theform") ){
						$object = $result;
					}

				}
				if( is_object( $object ) ){
					return $object;
				}
			}
		}


		function getListById($id=null){
			if( $this->connection ){
				if( $id == null && $this->getId() != ""){
					$id = $this->getId();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `theform` WHERE `id` = :id");
				$query->bindParam(':id', $id);

				if( $query->execute() ){
					while( $result = $query->fetchObject("theform") ){
						$theforms[] = $result;
					}
					if( is_array( $theforms ) ){
						return $theforms;
					}else{
						return array();
					}

				}
			}
		}

		function getListByOwner($owner=null){
			if( $this->connection ){
				if( $owner == null && $this->getOwner() != ""){
					$owner = $this->getOwner();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `theform` WHERE `owner` = :owner");
				$query->bindParam(':owner', $owner);

				if( $query->execute() ){
					while( $result = $query->fetchObject("theform") ){
						$theforms[] = $result;
					}
					if( is_array( $theforms ) ){
						return $theforms;
					}else{
						return array();
					}

				}
			}
		}

		function getListByTitle($title=null){
			if( $this->connection ){
				if( $title == null && $this->getTitle() != ""){
					$title = $this->getTitle();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `theform` WHERE `title` = :title");
				$query->bindParam(':title', $title);

				if( $query->execute() ){
					while( $result = $query->fetchObject("theform") ){
						$theforms[] = $result;
					}
					if( is_array( $theforms ) ){
						return $theforms;
					}else{
						return array();
					}

				}
			}
		}

		function getListByDescription($description=null){
			if( $this->connection ){
				if( $description == null && $this->getDescription() != ""){
					$description = $this->getDescription();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `theform` WHERE `description` = :description");
				$query->bindParam(':description', $description);

				if( $query->execute() ){
					while( $result = $query->fetchObject("theform") ){
						$theforms[] = $result;
					}
					if( is_array( $theforms ) ){
						return $theforms;
					}else{
						return array();
					}

				}
			}
		}

		function getListByEncrypt_all($encrypt_all=null){
			if( $this->connection ){
				if( $encrypt_all == null && $this->getEncrypt_all() != ""){
					$encrypt_all = $this->getEncrypt_all();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `theform` WHERE `encrypt_all` = :encrypt_all");
				$query->bindParam(':encrypt_all', $encrypt_all);

				if( $query->execute() ){
					while( $result = $query->fetchObject("theform") ){
						$theforms[] = $result;
					}
					if( is_array( $theforms ) ){
						return $theforms;
					}else{
						return array();
					}

				}
			}
		}

		function getListByCreated($created=null){
			if( $this->connection ){
				if( $created == null && $this->getCreated() != ""){
					$created = $this->getCreated();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `theform` WHERE `created` = :created");
				$query->bindParam(':created', $created);

				if( $query->execute() ){
					while( $result = $query->fetchObject("theform") ){
						$theforms[] = $result;
					}
					if( is_array( $theforms ) ){
						return $theforms;
					}else{
						return array();
					}

				}
			}
		}

		function getListByEnabled($enabled=null){
			if( $this->connection ){
				if( $enabled == null && $this->getEnabled() != ""){
					$enabled = $this->getEnabled();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `theform` WHERE `enabled` = :enabled");
				$query->bindParam(':enabled', $enabled);

				if( $query->execute() ){
					while( $result = $query->fetchObject("theform") ){
						$theforms[] = $result;
					}
					if( is_array( $theforms ) ){
						return $theforms;
					}else{
						return array();
					}

				}
			}
		}

		function getListBySunrise($sunrise=null){
			if( $this->connection ){
				if( $sunrise == null && $this->getSunrise() != ""){
					$sunrise = $this->getSunrise();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `theform` WHERE `sunrise` = :sunrise");
				$query->bindParam(':sunrise', $sunrise);

				if( $query->execute() ){
					while( $result = $query->fetchObject("theform") ){
						$theforms[] = $result;
					}
					if( is_array( $theforms ) ){
						return $theforms;
					}else{
						return array();
					}

				}
			}
		}

		function getListBySunset($sunset=null){
			if( $this->connection ){
				if( $sunset == null && $this->getSunset() != ""){
					$sunset = $this->getSunset();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `theform` WHERE `sunset` = :sunset");
				$query->bindParam(':sunset', $sunset);

				if( $query->execute() ){
					while( $result = $query->fetchObject("theform") ){
						$theforms[] = $result;
					}
					if( is_array( $theforms ) ){
						return $theforms;
					}else{
						return array();
					}

				}
			}
		}

		/*Return parameter (object) as Array*/
		function toArray ($obj=null) {
			if (is_object($obj)) $obj = (array)$obj;
			if (is_array($obj)) {
				$new = array();
				foreach ($obj as $key => $val) {
					$class = get_class($this);
					$k = $key;
					$fkey = trim( str_replace( $class,"",$k));
					if( $fkey == "connection" || $fkey == "errors" || $fkey == "errorCount" ){
						//dont add
					}else{
						$new[$fkey] = $this->toArray($val);
					}
				}
			} else {
				$new = $obj;
			}
			return $new;
		}

		/*Return object as Array*/
		function asArray(){
			$array = $this->toArray( $this );
			return $array;
		}

		/*Return object as JSON String*/
		function asJSON(){
			return json_encode($this->asArray());
		}

		/*Return clone of Object*/
		function getClone(){
			return clone($this);
		}


		/*Echo array as CSV file*/
		function arrayToCSVFile($array, $filename="theform.csv", $delimiter=",", $showHeader=true){
			ob_clean();
			if( !is_array($array) ){
				$array = $this->asArray();
			}
			if( !is_array($showHeader) && $showHeader == true){
				$header=array();
				foreach( $array[0] as $key => $value){
					$header[] = strtoupper($key);
				}
				array_unshift($array, $header);
			}
			if( is_array($showHeader) ){
				array_unshift($array, $showHeader);
			}
			header('Content-Type: application/csv; charset=UTF-8');
			header('Content-Disposition: attachement; filename="'.$filename.'";');
			$f = fopen('php://output', 'w');
			foreach ($array as $line) {
				fputcsv($f, $line, $delimiter);
			}
			exit;
		}


		/*getObjectsLikeThis - returns array*/
		function getObjectsLikeThis($asArray=true){
			if( $this->connection ){
				$buildQuery="SELECT * FROM `theform` WHERE ";
				$numParams = 0;
				$values = array();
				foreach ($this as $key => $value) {
					if( $value != "" && $key != "id" && $key != "connection" && $key != "error" && $key != "errorCount"){
						$buildQuery.="`".$key."` = :value_".$numParams." AND ";
						$numParams++;
						$values[] = $value;
					}
				}
				if( $numParams > 0 ){
					//remove last AND
					$buildQuery = substr( $buildQuery , 0, (strlen($buildQuery) -4) );
					$query = $this->connection->PREPARE($buildQuery);
					for($i=0; $i < $numParams; $i++){
						$query->bindParam(":value_".$i, $values[$i]);
					}
					if( $query->execute() ){
						if( $asArray == true ){
							return $query->fetchAll(PDO::FETCH_ASSOC);
						}else{
							$objArray = array();
							while( $result = $query->fetchObject("theform") ){
								$object = $result;
								$objArray[] = $object;
							}
							return $objArray;
						}
					}
				}
			}
		}

		/*get properties*/
		function getObjectsProperties(){
			$properties = array();
			foreach ($this as $key => $value) {
				if( $key != "id" && $key != "connection" && $key != "error" && $key != "errorCount"){
					$properties[] = $key;
				}
			}
			return $properties;
		}
		/*Human readable print out of object*/
		function printFormatted($return=false){
			if($return){
				return '<pre>'.print_r( $this->asArray(), true ).'</pre>';
			}else{
				echo '<pre>'.print_r( $this->asArray(), true ).'</pre>';
			}
		}

	}
?>