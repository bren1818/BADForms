<?php
/*  Class Generated by Brendon Irwin's Class Generator

	Class: Formentryvalue

	rowID, i
	formID, i
	formKey, i
	formKeyName, v
	encrypted, bool
	formValue, lt

*/

	class Formentryvalue{
		private $id;
		private $connection;
		private $errors;
		private $errorCount;
		private $rowID;
		private $formID;
		private $formKey;
		private $formKeyName;
		private $encrypted;
		private $formValue;


		/*Constructor*/
		function __construct($databaseConnection=null){
			$this->connection = $databaseConnection;
		}

		/*Getters and Setters*/
		function getId(){
			return $this->id;
		}

		function setId($id){
			$this->id = $id;
		}

		function getConnection(){
			return $this->connection;
		}

		function setConnection($connection){
			$this->connection = $connection;
		}

		function getErrors(){
			return $this->errors;
		}

		function setErrors($errors){
			$this->errors = $errors;
		}

		function getErrorCount(){
			return $this->errorCount;
		}

		function setErrorCount($errorCount){
			$this->errorCount = $errorCount;
		}

		function getRowID(){
			return $this->rowID;
		}

		function setRowID($rowID){
			$this->rowID = $rowID;
		}

		function getFormID(){
			return $this->formID;
		}

		function setFormID($formID){
			$this->formID = $formID;
		}

		function getFormKey(){
			return $this->formKey;
		}

		function setFormKey($formKey){
			$this->formKey = $formKey;
		}

		function getFormKeyName(){
			return $this->formKeyName;
		}

		function setFormKeyName($formKeyName){
			$this->formKeyName = $formKeyName;
		}

		function getEncrypted(){
			return $this->encrypted;
		}

		function setEncrypted($encrypted){
			$this->encrypted = $encrypted;
		}

		function getFormValue(){
			return $this->formValue;
		}

		function setFormValue($formValue){
			$this->formValue = $formValue;
		}

		/*Special Functions*/
		function load($id = null){
			if( $this->connection ){
				if( $id == null && $this->getId() != ""){
					$id = $this->getId();
				}

				/*Perform Query*/
				if( $id != "" ){
					$query = $this->connection->prepare("SELECT * FROM `formentryvalue` WHERE `id` = :id");
					$query->bindParam(':id', $id);
					if( $query->execute() ){
						$formentryvalue = $query->fetchObject("formentryvalue");
					}
					if( is_object( $formentryvalue ) ){
						$formentryvalue->setConnection( $this->connection );
					}
					return $formentryvalue;
				}
			}
		}

		function getFromPost(){
			$this->setRowID( (isset($_POST["rowID"])) ? $_POST["rowID"] : $this->getRowID() );
			$this->setFormID( (isset($_POST["formID"])) ? $_POST["formID"] : $this->getFormID() );
			$this->setFormKey( (isset($_POST["formKey"])) ? $_POST["formKey"] : $this->getFormKey() );
			$this->setFormKeyName( (isset($_POST["formKeyName"])) ? $_POST["formKeyName"] : $this->getFormKeyName() );
			$this->setEncrypted( (isset($_POST["encrypted"])) ? $_POST["encrypted"] : $this->getEncrypted() );
			$this->setFormValue( (isset($_POST["formValue"])) ? $_POST["formValue"] : $this->getFormValue() );
		}

		function getFromRequest(){
			$this->setRowID( (isset($_REQUEST["rowID"])) ? $_REQUEST["rowID"] : $this->getRowID() );
			$this->setFormID( (isset($_REQUEST["formID"])) ? $_REQUEST["formID"] : $this->getFormID() );
			$this->setFormKey( (isset($_REQUEST["formKey"])) ? $_REQUEST["formKey"] : $this->getFormKey() );
			$this->setFormKeyName( (isset($_REQUEST["formKeyName"])) ? $_REQUEST["formKeyName"] : $this->getFormKeyName() );
			$this->setEncrypted( (isset($_REQUEST["encrypted"])) ? $_REQUEST["encrypted"] : $this->getEncrypted() );
			$this->setFormValue( (isset($_REQUEST["formValue"])) ? $_REQUEST["formValue"] : $this->getFormValue() );
		}

		function getFromArray($arr){
			$this->setRowID( (isset($arr["rowID"])) ? $arr["rowID"] : $this->getRowID() );
			$this->setFormID( (isset($arr["formID"])) ? $arr["formID"] : $this->getFormID() );
			$this->setFormKey( (isset($arr["formKey"])) ? $arr["formKey"] : $this->getFormKey() );
			$this->setFormKeyName( (isset($arr["formKeyName"])) ? $arr["formKeyName"] : $this->getFormKeyName() );
			$this->setEncrypted( (isset($arr["encrypted"])) ? $arr["encrypted"] : $this->getEncrypted() );
			$this->setFormValue( (isset($arr["formValue"])) ? $arr["formValue"] : $this->getFormValue() );
		}

		function compareTo($formentryvalue){
			$log = array();
			if($this->getId() != $formentryvalue->getId() ){
				$log["Id"] = "modified";
			}else{
				$log["Id"] = "un-modified";
			}
			if($this->getConnection() != $formentryvalue->getConnection() ){
				$log["Connection"] = "modified";
			}else{
				$log["Connection"] = "un-modified";
			}
			if($this->getErrors() != $formentryvalue->getErrors() ){
				$log["Errors"] = "modified";
			}else{
				$log["Errors"] = "un-modified";
			}
			if($this->getErrorCount() != $formentryvalue->getErrorCount() ){
				$log["ErrorCount"] = "modified";
			}else{
				$log["ErrorCount"] = "un-modified";
			}
			if($this->getRowID() != $formentryvalue->getRowID() ){
				$log["RowID"] = "modified";
			}else{
				$log["RowID"] = "un-modified";
			}
			if($this->getFormID() != $formentryvalue->getFormID() ){
				$log["FormID"] = "modified";
			}else{
				$log["FormID"] = "un-modified";
			}
			if($this->getFormKey() != $formentryvalue->getFormKey() ){
				$log["FormKey"] = "modified";
			}else{
				$log["FormKey"] = "un-modified";
			}
			if($this->getFormKeyName() != $formentryvalue->getFormKeyName() ){
				$log["FormKeyName"] = "modified";
			}else{
				$log["FormKeyName"] = "un-modified";
			}
			if($this->getEncrypted() != $formentryvalue->getEncrypted() ){
				$log["Encrypted"] = "modified";
			}else{
				$log["Encrypted"] = "un-modified";
			}
			if($this->getFormValue() != $formentryvalue->getFormValue() ){
				$log["FormValue"] = "modified";
			}else{
				$log["FormValue"] = "un-modified";
			}
		return $log;
		}

		function save(){
			$id = $this->getId();
			$rowID = $this->getRowID();
			$formID = $this->getFormID();
			$formKey = $this->getFormKey();
			$formKeyName = $this->getFormKeyName();
			$encrypted = $this->getEncrypted();
			$formValue = $this->getFormValue();
			if( $this->connection ){
				if( $id != "" ){
					/*Perform Update Operation*/
					$query = $this->connection->prepare("UPDATE  `formentryvalue` SET `rowID` = :rowID ,`formID` = :formID ,`formKey` = :formKey ,`formKeyName` = :formKeyName ,`encrypted` = :encrypted ,`formValue` = :formValue WHERE `id` = :id");
					$query->bindParam('rowID', $rowID);
					$query->bindParam('formID', $formID);
					$query->bindParam('formKey', $formKey);
					$query->bindParam('formKeyName', $formKeyName);
					$query->bindParam('encrypted', $encrypted);
					$query->bindParam('formValue', $formValue);
					$query->bindParam('id', $id);
					if( $query->execute() ){
						return $id;
					}else{
						return -1;
					}

				}else{
					/*Perform Insert Operation*/
					$query = $this->connection->prepare("INSERT INTO `formentryvalue` (`id`,`rowID`,`formID`,`formKey`,`formKeyName`,`encrypted`,`formValue`) VALUES (NULL,:rowID,:formID,:formKey,:formKeyName,:encrypted,:formValue);");
					$query->bindParam(':rowID', $rowID);
					$query->bindParam(':formID', $formID);
					$query->bindParam(':formKey', $formKey);
					$query->bindParam(':formKeyName', $formKeyName);
					$query->bindParam(':encrypted', $encrypted);
					$query->bindParam(':formValue', $formValue);

					if( $query->execute() ){
						$this->setId( $this->connection->lastInsertId() );
						return $this->getId();
					}else{
						return -1;
					}	
				}
			}
		}


		function delete($id = null){
			if( $this->connection ){
				if( $id == null && $this->getId() != ""){
					$id = $this->getId();
				}

				/*Perform Query*/
				if( $id != "" ){
					$query = $this->connection->prepare("DELETE FROM `formentryvalue` WHERE `id` = :id");
					$query->bindParam(':id', $id);
					if( $query->execute() ){
						return 1;
					}else{
						return 0;
					}
				}
			}
		}

		function getById($id){
			if( $this->connection ){
				if( $id == null && $this->getId() != ""){
					$id = $this->getId();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `formentryvalue` WHERE `id` = :id LIMIT 1");
				$query->bindParam(':id', $id);
				$object = null;

				if( $query->execute() ){
					while( $result = $query->fetchObject("formentryvalue") ){
						$object = $result;
					}

				}
				if( is_object( $object ) ){
					return $object;
				}
			}
		}

		function getByRowID($rowID){
			if( $this->connection ){
				if( $rowID == null && $this->getRowID() != ""){
					$rowID = $this->getRowID();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `formentryvalue` WHERE `rowID` = :rowID LIMIT 1");
				$query->bindParam(':rowID', $rowID);
				$object = null;

				if( $query->execute() ){
					while( $result = $query->fetchObject("formentryvalue") ){
						$object = $result;
					}

				}
				if( is_object( $object ) ){
					return $object;
				}
			}
		}

		function getByFormID($formID){
			if( $this->connection ){
				if( $formID == null && $this->getFormID() != ""){
					$formID = $this->getFormID();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `formentryvalue` WHERE `formID` = :formID LIMIT 1");
				$query->bindParam(':formID', $formID);
				$object = null;

				if( $query->execute() ){
					while( $result = $query->fetchObject("formentryvalue") ){
						$object = $result;
					}

				}
				if( is_object( $object ) ){
					return $object;
				}
			}
		}

		function getByFormKey($formKey){
			if( $this->connection ){
				if( $formKey == null && $this->getFormKey() != ""){
					$formKey = $this->getFormKey();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `formentryvalue` WHERE `formKey` = :formKey LIMIT 1");
				$query->bindParam(':formKey', $formKey);
				$object = null;

				if( $query->execute() ){
					while( $result = $query->fetchObject("formentryvalue") ){
						$object = $result;
					}

				}
				if( is_object( $object ) ){
					return $object;
				}
			}
		}

		function getByFormKeyName($formKeyName){
			if( $this->connection ){
				if( $formKeyName == null && $this->getFormKeyName() != ""){
					$formKeyName = $this->getFormKeyName();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `formentryvalue` WHERE `formKeyName` = :formKeyName LIMIT 1");
				$query->bindParam(':formKeyName', $formKeyName);
				$object = null;

				if( $query->execute() ){
					while( $result = $query->fetchObject("formentryvalue") ){
						$object = $result;
					}

				}
				if( is_object( $object ) ){
					return $object;
				}
			}
		}

		function getByEncrypted($encrypted){
			if( $this->connection ){
				if( $encrypted == null && $this->getEncrypted() != ""){
					$encrypted = $this->getEncrypted();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `formentryvalue` WHERE `encrypted` = :encrypted LIMIT 1");
				$query->bindParam(':encrypted', $encrypted);
				$object = null;

				if( $query->execute() ){
					while( $result = $query->fetchObject("formentryvalue") ){
						$object = $result;
					}

				}
				if( is_object( $object ) ){
					return $object;
				}
			}
		}

		function getByFormValue($formValue){
			if( $this->connection ){
				if( $formValue == null && $this->getFormValue() != ""){
					$formValue = $this->getFormValue();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `formentryvalue` WHERE `formValue` = :formValue LIMIT 1");
				$query->bindParam(':formValue', $formValue);
				$object = null;

				if( $query->execute() ){
					while( $result = $query->fetchObject("formentryvalue") ){
						$object = $result;
					}

				}
				if( is_object( $object ) ){
					return $object;
				}
			}
		}


		function getListById($id=null){
			if( $this->connection ){
				if( $id == null && $this->getId() != ""){
					$id = $this->getId();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `formentryvalue` WHERE `id` = :id");
				$query->bindParam(':id', $id);

				if( $query->execute() ){
					while( $result = $query->fetchObject("formentryvalue") ){
						$formentryvalues[] = $result;
					}
					if( is_array( $formentryvalues ) ){
						return $formentryvalues;
					}else{
						return array();
					}

				}
			}
		}

		function getListByRowID($rowID=null){
			if( $this->connection ){
				if( $rowID == null && $this->getRowID() != ""){
					$rowID = $this->getRowID();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `formentryvalue` WHERE `rowID` = :rowID");
				$query->bindParam(':rowID', $rowID);

				if( $query->execute() ){
					while( $result = $query->fetchObject("formentryvalue") ){
						$formentryvalues[] = $result;
					}
					if( is_array( $formentryvalues ) ){
						return $formentryvalues;
					}else{
						return array();
					}

				}
			}
		}

		function getListByFormID($formID=null){
			if( $this->connection ){
				if( $formID == null && $this->getFormID() != ""){
					$formID = $this->getFormID();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `formentryvalue` WHERE `formID` = :formID");
				$query->bindParam(':formID', $formID);

				if( $query->execute() ){
					while( $result = $query->fetchObject("formentryvalue") ){
						$formentryvalues[] = $result;
					}
					if( is_array( $formentryvalues ) ){
						return $formentryvalues;
					}else{
						return array();
					}

				}
			}
		}

		function getListByFormKey($formKey=null){
			if( $this->connection ){
				if( $formKey == null && $this->getFormKey() != ""){
					$formKey = $this->getFormKey();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `formentryvalue` WHERE `formKey` = :formKey");
				$query->bindParam(':formKey', $formKey);

				if( $query->execute() ){
					while( $result = $query->fetchObject("formentryvalue") ){
						$formentryvalues[] = $result;
					}
					if( is_array( $formentryvalues ) ){
						return $formentryvalues;
					}else{
						return array();
					}

				}
			}
		}

		function getListByFormKeyName($formKeyName=null){
			if( $this->connection ){
				if( $formKeyName == null && $this->getFormKeyName() != ""){
					$formKeyName = $this->getFormKeyName();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `formentryvalue` WHERE `formKeyName` = :formKeyName");
				$query->bindParam(':formKeyName', $formKeyName);

				if( $query->execute() ){
					while( $result = $query->fetchObject("formentryvalue") ){
						$formentryvalues[] = $result;
					}
					if( is_array( $formentryvalues ) ){
						return $formentryvalues;
					}else{
						return array();
					}

				}
			}
		}

		function getListByEncrypted($encrypted=null){
			if( $this->connection ){
				if( $encrypted == null && $this->getEncrypted() != ""){
					$encrypted = $this->getEncrypted();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `formentryvalue` WHERE `encrypted` = :encrypted");
				$query->bindParam(':encrypted', $encrypted);

				if( $query->execute() ){
					while( $result = $query->fetchObject("formentryvalue") ){
						$formentryvalues[] = $result;
					}
					if( is_array( $formentryvalues ) ){
						return $formentryvalues;
					}else{
						return array();
					}

				}
			}
		}

		function getListByFormValue($formValue=null){
			if( $this->connection ){
				if( $formValue == null && $this->getFormValue() != ""){
					$formValue = $this->getFormValue();
				}

				/*Perform Query*/
				$query = $this->connection->prepare("SELECT * FROM `formentryvalue` WHERE `formValue` = :formValue");
				$query->bindParam(':formValue', $formValue);

				if( $query->execute() ){
					while( $result = $query->fetchObject("formentryvalue") ){
						$formentryvalues[] = $result;
					}
					if( is_array( $formentryvalues ) ){
						return $formentryvalues;
					}else{
						return array();
					}

				}
			}
		}

		/*Return parameter (object) as Array*/
		function toArray ($obj=null) {
			if (is_object($obj)) $obj = (array)$obj;
			if (is_array($obj)) {
				$new = array();
				foreach ($obj as $key => $val) {
					$class = get_class($this);
					$k = $key;
					$fkey = trim( str_replace( $class,"",$k));
					if( $fkey == "connection" || $fkey == "errors" || $fkey == "errorCount" ){
						//dont add
					}else{
						$new[$fkey] = $this->toArray($val);
					}
				}
			} else {
				$new = $obj;
			}
			return $new;
		}

		/*Return object as Array*/
		function asArray(){
			$array = $this->toArray( $this );
			return $array;
		}

		/*Return object as JSON String*/
		function asJSON(){
			return json_encode($this->asArray());
		}

		/*Return clone of Object*/
		function getClone(){
			return clone($this);
		}


		/*Echo array as CSV file*/
		function arrayToCSVFile($array, $filename="formentryvalue.csv", $delimiter=",", $showHeader=true){
			ob_clean();
			if( !is_array($array) ){
				$array = $this->asArray();
			}
			if( !is_array($showHeader) && $showHeader == true){
				$header=array();
				foreach( $array[0] as $key => $value){
					$header[] = strtoupper($key);
				}
				array_unshift($array, $header);
			}
			if( is_array($showHeader) ){
				array_unshift($array, $showHeader);
			}
			header('Content-Type: application/csv; charset=UTF-8');
			header('Content-Disposition: attachement; filename="'.$filename.'";');
			$f = fopen('php://output', 'w');
			foreach ($array as $line) {
				fputcsv($f, $line, $delimiter);
			}
			exit;
		}


		/*getObjectsLikeThis - returns array*/
		function getObjectsLikeThis($asArray=true){
			if( $this->connection ){
				$buildQuery="SELECT * FROM `formentryvalue` WHERE ";
				$numParams = 0;
				$values = array();
				foreach ($this as $key => $value) {
					if( $value != "" && $key != "id" && $key != "connection" && $key != "error" && $key != "errorCount"){
						$buildQuery.="`".$key."` = :value_".$numParams." AND ";
						$numParams++;
						$values[] = $value;
					}
				}
				if( $numParams > 0 ){
					//remove last AND
					$buildQuery = substr( $buildQuery , 0, (strlen($buildQuery) -4) );
					$query = $this->connection->PREPARE($buildQuery);
					for($i=0; $i < $numParams; $i++){
						$query->bindParam(":value_".$i, $values[$i]);
					}
					if( $query->execute() ){
						if( $asArray == true ){
							return $query->fetchAll(PDO::FETCH_ASSOC);
						}else{
							$objArray = array();
							while( $result = $query->fetchObject("formentryvalue") ){
								$object = $result;
								$objArray[] = $object;
							}
							return $objArray;
						}
					}
				}
			}
		}

		/*get properties*/
		function getObjectsProperties(){
			$properties = array();
			foreach ($this as $key => $value) {
				if( $key != "id" && $key != "connection" && $key != "error" && $key != "errorCount"){
					$properties[] = $key;
				}
			}
			return $properties;
		}
		/*Human readable print out of object*/
		function printFormatted($return=false){
			if($return){
				return '<pre>'.print_r( $this->asArray(), true ).'</pre>';
			}else{
				echo '<pre>'.print_r( $this->asArray(), true ).'</pre>';
			}
		}

	}
?>